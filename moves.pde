void Rmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1+2)*100, row1*100, 100, 100);
  rect((col1+3)*100, row1*100, 100, 100);
  rect((col1+4)*100, row1*100, 100, 100);
  rect((col1+5)*100, row1*100, 100, 100);
  rect((col1+6)*100, row1*100, 100, 100);
  rect((col1+7)*100, row1*100, 100, 100);
  rect((col1+8)*100, row1*100, 100, 100);

  rect(col1*100, (row1+1)*100, 100, 100);
  rect(col1*100, (row1+2)*100, 100, 100);
  rect(col1*100, (row1+3)*100, 100, 100);
  rect(col1*100, (row1+4)*100, 100, 100);
  rect(col1*100, (row1+5)*100, 100, 100);
  rect(col1*100, (row1+6)*100, 100, 100);
  rect(col1*100, (row1+7)*100, 100, 100);
  rect(col1*100, (row1+8)*100, 100, 100);


  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1-2)*100, row1*100, 100, 100);
  rect((col1-3)*100, row1*100, 100, 100);
  rect((col1-4)*100, row1*100, 100, 100);
  rect((col1-5)*100, row1*100, 100, 100);
  rect((col1-6)*100, row1*100, 100, 100);
  rect((col1-7)*100, row1*100, 100, 100);
  rect((col1-8)*100, row1*100, 100, 100);

  rect(col1*100, (row1-1)*100, 100, 100);
  rect(col1*100, (row1-2)*100, 100, 100);
  rect(col1*100, (row1-3)*100, 100, 100);
  rect(col1*100, (row1-4)*100, 100, 100);
  rect(col1*100, (row1-5)*100, 100, 100);
  rect(col1*100, (row1-6)*100, 100, 100);
  rect(col1*100, (row1-7)*100, 100, 100);
  rect(col1*100, (row1-8)*100, 100, 100);
}//.............................................

void rmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1+2)*100, row1*100, 100, 100);
  rect((col1+3)*100, row1*100, 100, 100);
  rect((col1+4)*100, row1*100, 100, 100);
  rect((col1+5)*100, row1*100, 100, 100);
  rect((col1+6)*100, row1*100, 100, 100);
  rect((col1+7)*100, row1*100, 100, 100);
  rect((col1+8)*100, row1*100, 100, 100);

  rect(col1*100, (row1+1)*100, 100, 100);
  rect(col1*100, (row1+2)*100, 100, 100);
  rect(col1*100, (row1+3)*100, 100, 100);
  rect(col1*100, (row1+4)*100, 100, 100);
  rect(col1*100, (row1+5)*100, 100, 100);
  rect(col1*100, (row1+6)*100, 100, 100);
  rect(col1*100, (row1+7)*100, 100, 100);
  rect(col1*100, (row1+8)*100, 100, 100);


  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1-2)*100, row1*100, 100, 100);
  rect((col1-3)*100, row1*100, 100, 100);
  rect((col1-4)*100, row1*100, 100, 100);
  rect((col1-5)*100, row1*100, 100, 100);
  rect((col1-6)*100, row1*100, 100, 100);
  rect((col1-7)*100, row1*100, 100, 100);
  rect((col1-8)*100, row1*100, 100, 100);

  rect(col1*100, (row1-1)*100, 100, 100);
  rect(col1*100, (row1-2)*100, 100, 100);
  rect(col1*100, (row1-3)*100, 100, 100);
  rect(col1*100, (row1-4)*100, 100, 100);
  rect(col1*100, (row1-5)*100, 100, 100);
  rect(col1*100, (row1-6)*100, 100, 100);
  rect(col1*100, (row1-7)*100, 100, 100);
  rect(col1*100, (row1-8)*100, 100, 100);
}//.............................................












void Bmoves() {//..............................
  rect((col1+1)*100, (row1+1)*100, 100, 100);
  rect((col1+2)*100, (row1+2)*100, 100, 100);
  rect((col1+3)*100, (row1+3)*100, 100, 100);
  rect((col1+4)*100, (row1+4)*100, 100, 100);
  rect((col1+5)*100, (row1+5)*100, 100, 100);
  rect((col1+6)*100, (row1+6)*100, 100, 100);
  rect((col1+7)*100, (row1+7)*100, 100, 100);
  rect((col1+8)*100, (row1+8)*100, 100, 100);

  rect((col1-1)*100, (row1+1)*100, 100, 100);
  rect((col1-2)*100, (row1+2)*100, 100, 100);
  rect((col1-3)*100, (row1+3)*100, 100, 100);
  rect((col1-4)*100, (row1+4)*100, 100, 100);
  rect((col1-5)*100, (row1+5)*100, 100, 100);
  rect((col1-6)*100, (row1+6)*100, 100, 100);
  rect((col1-7)*100, (row1+7)*100, 100, 100);
  rect((col1-8)*100, (row1+8)*100, 100, 100);

  rect((col1+1)*100, (row1-1)*100, 100, 100);
  rect((col1+2)*100, (row1-2)*100, 100, 100);
  rect((col1+3)*100, (row1-3)*100, 100, 100);
  rect((col1+4)*100, (row1-4)*100, 100, 100);
  rect((col1+5)*100, (row1-5)*100, 100, 100);
  rect((col1+6)*100, (row1-6)*100, 100, 100);
  rect((col1+7)*100, (row1-7)*100, 100, 100);
  rect((col1+8)*100, (row1-8)*100, 100, 100);

  rect((col1-1)*100, (row1-1)*100, 100, 100);
  rect((col1-2)*100, (row1-2)*100, 100, 100);
  rect((col1-3)*100, (row1-3)*100, 100, 100);
  rect((col1-4)*100, (row1-4)*100, 100, 100);
  rect((col1-5)*100, (row1-5)*100, 100, 100);
  rect((col1-6)*100, (row1-6)*100, 100, 100);
  rect((col1-7)*100, (row1-7)*100, 100, 100);
  rect((col1-8)*100, (row1-8)*100, 100, 100);
}//.............................................


void bmoves() {//..............................
  rect((col1+1)*100, (row1+1)*100, 100, 100);
  rect((col1+2)*100, (row1+2)*100, 100, 100);
  rect((col1+3)*100, (row1+3)*100, 100, 100);
  rect((col1+4)*100, (row1+4)*100, 100, 100);
  rect((col1+5)*100, (row1+5)*100, 100, 100);
  rect((col1+6)*100, (row1+6)*100, 100, 100);
  rect((col1+7)*100, (row1+7)*100, 100, 100);
  rect((col1+8)*100, (row1+8)*100, 100, 100);

  rect((col1-1)*100, (row1+1)*100, 100, 100);
  rect((col1-2)*100, (row1+2)*100, 100, 100);
  rect((col1-3)*100, (row1+3)*100, 100, 100);
  rect((col1-4)*100, (row1+4)*100, 100, 100);
  rect((col1-5)*100, (row1+5)*100, 100, 100);
  rect((col1-6)*100, (row1+6)*100, 100, 100);
  rect((col1-7)*100, (row1+7)*100, 100, 100);
  rect((col1-8)*100, (row1+8)*100, 100, 100);

  rect((col1+1)*100, (row1-1)*100, 100, 100);
  rect((col1+2)*100, (row1-2)*100, 100, 100);
  rect((col1+3)*100, (row1-3)*100, 100, 100);
  rect((col1+4)*100, (row1-4)*100, 100, 100);
  rect((col1+5)*100, (row1-5)*100, 100, 100);
  rect((col1+6)*100, (row1-6)*100, 100, 100);
  rect((col1+7)*100, (row1-7)*100, 100, 100);
  rect((col1+8)*100, (row1-8)*100, 100, 100);

  rect((col1-1)*100, (row1-1)*100, 100, 100);
  rect((col1-2)*100, (row1-2)*100, 100, 100);
  rect((col1-3)*100, (row1-3)*100, 100, 100);
  rect((col1-4)*100, (row1-4)*100, 100, 100);
  rect((col1-5)*100, (row1-5)*100, 100, 100);
  rect((col1-6)*100, (row1-6)*100, 100, 100);
  rect((col1-7)*100, (row1-7)*100, 100, 100);
  rect((col1-8)*100, (row1-8)*100, 100, 100);
}//.............................................











void Nmoves() {//..............................
  rect((col1+2)*100, (row1+1)*100, 100, 100);
  rect((col1+1)*100, (row1+2)*100, 100, 100);
  rect((col1-2)*100, (row1-1)*100, 100, 100);
  rect((col1-1)*100, (row1-2)*100, 100, 100);
  rect((col1+2)*100, (row1-1)*100, 100, 100);
  rect((col1+1)*100, (row1-2)*100, 100, 100);
  rect((col1-2)*100, (row1+1)*100, 100, 100);
  rect((col1-1)*100, (row1+2)*100, 100, 100);
}//.............................................

void nmoves() {//..............................
  rect((col1+2)*100, (row1+1)*100, 100, 100);
  rect((col1+1)*100, (row1+2)*100, 100, 100);
  rect((col1-2)*100, (row1-1)*100, 100, 100);
  rect((col1-1)*100, (row1-2)*100, 100, 100);
  rect((col1+2)*100, (row1-1)*100, 100, 100);
  rect((col1+1)*100, (row1-2)*100, 100, 100);
  rect((col1-2)*100, (row1+1)*100, 100, 100);
  rect((col1-1)*100, (row1+2)*100, 100, 100);
}//.............................................













void Qmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1+2)*100, row1*100, 100, 100);
  rect((col1+3)*100, row1*100, 100, 100);
  rect((col1+4)*100, row1*100, 100, 100);
  rect((col1+5)*100, row1*100, 100, 100);
  rect((col1+6)*100, row1*100, 100, 100);
  rect((col1+7)*100, row1*100, 100, 100);
  rect((col1+8)*100, row1*100, 100, 100);

  rect(col1*100, (row1+1)*100, 100, 100);
  rect(col1*100, (row1+2)*100, 100, 100);
  rect(col1*100, (row1+3)*100, 100, 100);
  rect(col1*100, (row1+4)*100, 100, 100);
  rect(col1*100, (row1+5)*100, 100, 100);
  rect(col1*100, (row1+6)*100, 100, 100);
  rect(col1*100, (row1+7)*100, 100, 100);
  rect(col1*100, (row1+8)*100, 100, 100);


  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1-2)*100, row1*100, 100, 100);
  rect((col1-3)*100, row1*100, 100, 100);
  rect((col1-4)*100, row1*100, 100, 100);
  rect((col1-5)*100, row1*100, 100, 100);
  rect((col1-6)*100, row1*100, 100, 100);
  rect((col1-7)*100, row1*100, 100, 100);
  rect((col1-8)*100, row1*100, 100, 100);

  rect(col1*100, (row1-1)*100, 100, 100);
  rect(col1*100, (row1-2)*100, 100, 100);
  rect(col1*100, (row1-3)*100, 100, 100);
  rect(col1*100, (row1-4)*100, 100, 100);
  rect(col1*100, (row1-5)*100, 100, 100);
  rect(col1*100, (row1-6)*100, 100, 100);
  rect(col1*100, (row1-7)*100, 100, 100);
  rect(col1*100, (row1-8)*100, 100, 100);

  rect((col1+1)*100, (row1+1)*100, 100, 100);
  rect((col1+2)*100, (row1+2)*100, 100, 100);
  rect((col1+3)*100, (row1+3)*100, 100, 100);
  rect((col1+4)*100, (row1+4)*100, 100, 100);
  rect((col1+5)*100, (row1+5)*100, 100, 100);
  rect((col1+6)*100, (row1+6)*100, 100, 100);
  rect((col1+7)*100, (row1+7)*100, 100, 100);
  rect((col1+8)*100, (row1+8)*100, 100, 100);

  rect((col1-1)*100, (row1+1)*100, 100, 100);
  rect((col1-2)*100, (row1+2)*100, 100, 100);
  rect((col1-3)*100, (row1+3)*100, 100, 100);
  rect((col1-4)*100, (row1+4)*100, 100, 100);
  rect((col1-5)*100, (row1+5)*100, 100, 100);
  rect((col1-6)*100, (row1+6)*100, 100, 100);
  rect((col1-7)*100, (row1+7)*100, 100, 100);
  rect((col1-8)*100, (row1+8)*100, 100, 100);

  rect((col1+1)*100, (row1-1)*100, 100, 100);
  rect((col1+2)*100, (row1-2)*100, 100, 100);
  rect((col1+3)*100, (row1-3)*100, 100, 100);
  rect((col1+4)*100, (row1-4)*100, 100, 100);
  rect((col1+5)*100, (row1-5)*100, 100, 100);
  rect((col1+6)*100, (row1-6)*100, 100, 100);
  rect((col1+7)*100, (row1-7)*100, 100, 100);
  rect((col1+8)*100, (row1-8)*100, 100, 100);

  rect((col1-1)*100, (row1-1)*100, 100, 100);
  rect((col1-2)*100, (row1-2)*100, 100, 100);
  rect((col1-3)*100, (row1-3)*100, 100, 100);
  rect((col1-4)*100, (row1-4)*100, 100, 100);
  rect((col1-5)*100, (row1-5)*100, 100, 100);
  rect((col1-6)*100, (row1-6)*100, 100, 100);
  rect((col1-7)*100, (row1-7)*100, 100, 100);
  rect((col1-8)*100, (row1-8)*100, 100, 100);
}//.............................................


void qmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1+2)*100, row1*100, 100, 100);
  rect((col1+3)*100, row1*100, 100, 100);
  rect((col1+4)*100, row1*100, 100, 100);
  rect((col1+5)*100, row1*100, 100, 100);
  rect((col1+6)*100, row1*100, 100, 100);
  rect((col1+7)*100, row1*100, 100, 100);
  rect((col1+8)*100, row1*100, 100, 100);

  rect(col1*100, (row1+1)*100, 100, 100);
  rect(col1*100, (row1+2)*100, 100, 100);
  rect(col1*100, (row1+3)*100, 100, 100);
  rect(col1*100, (row1+4)*100, 100, 100);
  rect(col1*100, (row1+5)*100, 100, 100);
  rect(col1*100, (row1+6)*100, 100, 100);
  rect(col1*100, (row1+7)*100, 100, 100);
  rect(col1*100, (row1+8)*100, 100, 100);


  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1-2)*100, row1*100, 100, 100);
  rect((col1-3)*100, row1*100, 100, 100);
  rect((col1-4)*100, row1*100, 100, 100);
  rect((col1-5)*100, row1*100, 100, 100);
  rect((col1-6)*100, row1*100, 100, 100);
  rect((col1-7)*100, row1*100, 100, 100);
  rect((col1-8)*100, row1*100, 100, 100);

  rect(col1*100, (row1-1)*100, 100, 100);
  rect(col1*100, (row1-2)*100, 100, 100);
  rect(col1*100, (row1-3)*100, 100, 100);
  rect(col1*100, (row1-4)*100, 100, 100);
  rect(col1*100, (row1-5)*100, 100, 100);
  rect(col1*100, (row1-6)*100, 100, 100);
  rect(col1*100, (row1-7)*100, 100, 100);
  rect(col1*100, (row1-8)*100, 100, 100);

  rect((col1+1)*100, (row1+1)*100, 100, 100);
  rect((col1+2)*100, (row1+2)*100, 100, 100);
  rect((col1+3)*100, (row1+3)*100, 100, 100);
  rect((col1+4)*100, (row1+4)*100, 100, 100);
  rect((col1+5)*100, (row1+5)*100, 100, 100);
  rect((col1+6)*100, (row1+6)*100, 100, 100);
  rect((col1+7)*100, (row1+7)*100, 100, 100);
  rect((col1+8)*100, (row1+8)*100, 100, 100);

  rect((col1-1)*100, (row1+1)*100, 100, 100);
  rect((col1-2)*100, (row1+2)*100, 100, 100);
  rect((col1-3)*100, (row1+3)*100, 100, 100);
  rect((col1-4)*100, (row1+4)*100, 100, 100);
  rect((col1-5)*100, (row1+5)*100, 100, 100);
  rect((col1-6)*100, (row1+6)*100, 100, 100);
  rect((col1-7)*100, (row1+7)*100, 100, 100);
  rect((col1-8)*100, (row1+8)*100, 100, 100);

  rect((col1+1)*100, (row1-1)*100, 100, 100);
  rect((col1+2)*100, (row1-2)*100, 100, 100);
  rect((col1+3)*100, (row1-3)*100, 100, 100);
  rect((col1+4)*100, (row1-4)*100, 100, 100);
  rect((col1+5)*100, (row1-5)*100, 100, 100);
  rect((col1+6)*100, (row1-6)*100, 100, 100);
  rect((col1+7)*100, (row1-7)*100, 100, 100);
  rect((col1+8)*100, (row1-8)*100, 100, 100);

  rect((col1-1)*100, (row1-1)*100, 100, 100);
  rect((col1-2)*100, (row1-2)*100, 100, 100);
  rect((col1-3)*100, (row1-3)*100, 100, 100);
  rect((col1-4)*100, (row1-4)*100, 100, 100);
  rect((col1-5)*100, (row1-5)*100, 100, 100);
  rect((col1-6)*100, (row1-6)*100, 100, 100);
  rect((col1-7)*100, (row1-7)*100, 100, 100);
  rect((col1-8)*100, (row1-8)*100, 100, 100);
}//.............................................










void Kmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1)*100, (row1+1)*100, 100, 100);
  rect((col1)*100, (row1-1)*100, 100, 100);
}//.............................................

void kmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1)*100, (row1+1)*100, 100, 100);
  rect((col1)*100, (row1-1)*100, 100, 100);
}//.............................................



void Pmoves() {//..............................

  if (row1 == 1) {
    rect(col1*100, (row1+2)*100, 100, 100);
  }
  rect(col1*100, (row1+1)*100, 100, 100);
  
}//.............................................






  
  
  
  
void pmoves() {//..............................

  if (row1 == 6) {
    rect(col1*100, (row1-2)*100, 100, 100);
  }
  rect(col1*100, (row1-1)*100, 100, 100);
}//.............................................


//if ( (row1+1) != 'R' || (row1+1) != 'r' || (row1+1) != 'B' || (row1+1) != 'b' || (row1+1) != 'N' || (row1+1) != 'n' || (row1+1) != 'Q' || (row1+1) != 'q' ||(row1+1) != 'P' ||(row1+1) != 'p') {
